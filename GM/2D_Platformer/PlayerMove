using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerMove : MonoBehaviour
{
    public float max_Speed;
    public float Jump_Power;

    Rigidbody2D rigid;
    SpriteRenderer spriteRenderer;
    Animator animator;

    void Awake(){
        rigid = GetComponent<Rigidbody2D>();
        spriteRenderer = GetComponent<SpriteRenderer>();
        animator = GetComponent<Animator>();
    }

    // Update is called once per frame
    void Update(){
        //Jump
        if (Input.GetButtonDown("Jump") && !animator.GetBool("IsJumping")){
            rigid.AddForce(Vector2.up * Jump_Power, ForceMode2D.Impulse);
            animator.SetBool("IsJumping", true);
        }

        //Stop Speed
        if (Input.GetButtonUp("Horizontal")){
            rigid.velocity = new Vector2(rigid.velocity.normalized.x * 0.5f, rigid.velocity.y);
        }

        //Direction Sprite
        if (rigid.velocity.x < 0)
            spriteRenderer.flipX = true;
        else spriteRenderer.flipX = false;

        //Character Flip
        if (Mathf.Abs(rigid.velocity.x) < 0.3)
            animator.SetBool("IsWalking", false);
        else
            animator.SetBool("IsWalking", true);
    }

    void FixedUpdate(){
        //Move By Key Control
        float h = Input.GetAxisRaw("Horizontal");
        rigid.AddForce(Vector2.right * h, ForceMode2D.Impulse);

        if (rigid.velocity.x > max_Speed) // Right Max Speed
            rigid.velocity = new Vector2(max_Speed, rigid.velocity.y);

        else if (rigid.velocity.x < max_Speed * (-1)) // Left Max Speed
            rigid.velocity = new Vector2(max_Speed * (-1), rigid.velocity.y);

        //Landing Platform
        if (rigid.velocity.y < 0){
            Debug.DrawRay(rigid.position, Vector3.down, new Color(0, 1, 0)); // 에디터 상에서만 Ray 를 그려주는 함수
            RaycastHit2D rayHit = Physics2D.Raycast(rigid.position, Vector3.down, 1, LayerMask.GetMask("Platform"));
            if (rayHit.collider != null){
                if (rayHit.distance < 0.5f)
                    animator.SetBool("IsJumping", false);
            }
        }
    }
}
